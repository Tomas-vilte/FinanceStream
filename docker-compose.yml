version: '3'

services:
  redis:
    image: redis:latest
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - ./redis:/data

  presto:
    build:
      context: .
      dockerfile: ./docker/Dockerfile_presto
    container_name: presto
    ports:
      - "8085:8080"
    volumes:
      - ./presto_properties:/opt/presto-server-0.284/etc/
    networks:
      - fintechstream_default
    

  superset:
    image: apache/superset:latest
    user: root
    restart: unless-stopped
    container_name: superset
    volumes:
      - ./config/superset_config.py:/app/superset_config.py
      - ./docker/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    env_file: ./docker/.env-non-dev
    ports:
      - "8088:8088"
    networks:
      - fintechstream_default
    depends_on:
      - postgres

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    env_file: ./docker/.env-non-dev
    volumes:
      - ./db_home:/var/lib/postgresql/data
      - ./docker/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - fintechstream_default
      
  scylla:
    image: scylladb/scylla:latest
    container_name: scylladb
    networks:
      - fintechstream_default
    volumes:
      - ./data/scylla:/var/lib/scylla
    command: "--smp 1 --memory 256M --experimental 1"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - fintechstream_default
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    ports:
      - "9092:9092"
    networks:
      - fintechstream_default
    depends_on:
      - zookeeper
    environment:
      KAFKA_DELETE_TOPIC_ENABLE: "true"     
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.17.0.1:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  spark-master:
    image: bitnami/spark:3.5.0
    command: bin/spark-class org.apache.spark.deploy.master.Master
    ports:
       - "7077:7077" 
       - "8080:8080"
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./data_pipeline:/opt/bitnami/data_pipeline:rw
    networks:
      - fintechstream_default
  
  spark-worker:
    image: bitnami/spark:3.5.0
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on:
      - spark-master
    volumes:
      - ./data_pipeline:/opt/bitnami/data_pipeline:rw
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    networks:
      - fintechstream_default

    
networks:
  fintechstream_default: